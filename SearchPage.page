<apex:page controller="SearchPageController"> <!-- use the corresponding controller -->
    <apex:form id="form1">  <!-- we need a form to take in user input -->
        
        <apex:tabPanel switchType="client">
            <!--This tab contains the search page-->
            <apex:tab label="Search" name="search">
                
                <!-- inputHiddens pass lat and lon to controller -->
                <apex:inputHidden id="lat" value="{!lat}"></apex:inputHidden>
                <apex:inputHidden id="lon" value="{!lon}"></apex:inputHidden>
                
                <!-- user specifies how they want distance to doctors calculated -->
                <apex:selectRadio value="{!distanceFilter}" onclick="getLocation()">
                    <apex:selectOption itemValue="zipcode" itemLabel="Enter a Zip Code"></apex:selectOption>
                    <apex:selectOption itemValue="currentLocation" itemLabel="Use Current Location"></apex:selectOption>    
                </apex:selectRadio>
                
                
                
                
                <!-- The various filters are displayed here. VF automatically uses the getter and setter methods defined in the controller -->
                
                <apex:inputText id="mile" value="{!mile}">Mile Radius:</apex:inputText>
                
                <apex:inputText value="{!zip}">Zip Code:</apex:inputText>
                
                <apex:selectList value="{!lang}" multiselect="false" size="1">
                    Language:
                    <apex:selectOptions value="{!languages}"></apex:selectOptions>
                </apex:selectList>
                
                <apex:selectList value="{!plan}" multiselect="false" size="1">
                    Insurance Plan:
                    <apex:selectOptions value="{!plans}"></apex:selectOptions>
                </apex:selectList>
                
                <apex:selectList value="{!spec}" multiselect="false" size="1">
                    Specialty:
                    <apex:selectOptions value="{!specialties}"></apex:selectOptions>
                </apex:selectList>
                
                <apex:selectList value="{!aNP}" multiselect="false" size="1">
                    Accepting New Patients:
                    <apex:selectOptions value="{!newpatients}"></apex:selectOptions>
                </apex:selectList>
                
                <!-- Search button which rerenders the below table -->
                <apex:commandButton status="loading" action="{!search}" reRender="docs" value="Search"/>
                <!-- This component displays 'loading...' while search results are loading -->
                <apex:actionStatus id="loading" startText="loading..." stopText="" />
                
                <!-- The table of doctors that is displayed -->
                <apex:dataTable id="docs" value="{!doctors}" var="d">
                    <!-- Each column displays a different field from the doctor object -->
                    <apex:column>
                        <apex:facet name="header">Doctor Name</apex:facet>
                        <!-- The doctor's name is a link to that doctor's detail page -->
                        <!-- The correct ID is set to the controller through a JS function when user mouses over the link -->
                        <apex:commandLink onmouseover="passID('{!d.id}')" action="{!doctorD}">
                            {!d.name}                            
                        </apex:commandLink>
                    </apex:column>
                    <apex:column>
                        <apex:facet name="header">Specialty</apex:facet>
                        {!d.Specialty__c}
                    </apex:column>
                    <apex:column id="dzip">
                        <apex:facet name="header">Zip Code</apex:facet>
                        {!d.Zip_Code__c}
                    </apex:column>
                    <apex:column>
                        <apex:facet name="header">Languages Spoken</apex:facet>
                        {!d.Languages__c}
                    </apex:column>
                    <apex:column>
                        <apex:facet name="header">Insurance Plans</apex:facet>
                        {!d.Plan_Network__c}
                    </apex:column>
                    <apex:column>
                        <apex:facet name="header">Accepting New Patients?</apex:facet>
                        {!d.Accepting_New_Patients__c}
                    </apex:column>
                    
                </apex:dataTable>
                <apex:commandButton action="{!pdfpage}" value="View as PDF"/>
                
                
                <!-- Hidden input passes ID to controller -->
                <apex:inputHidden id="docid" value="{!docID}"/>
                
            </apex:tab>
            <!--This tab contains the list of current user's past appointments-->
            <apex:tab label="Past Appointments" name="pastapps">
                
                <apex:dataTable value="{!apps}" var="a">
                    <apex:column>
                        <apex:facet name="header">Doctor Name</apex:facet>
                        <apex:commandLink onmouseover="passID('{!a.Doctor__c}')" action="{!doctorD}">
                            {!a.Doctor__r.name}                          
                        </apex:commandLink>
                    </apex:column>
                    <apex:column>
                        <apex:facet name="header">Appointment Date and Time</apex:facet>
                        {!a.Appointment_Date_and_Time__c}
                    </apex:column>
                    <apex:column>
                        <apex:facet name="header">Application</apex:facet>
                        {!a.Applications__r[0].name}
                    </apex:column>
                </apex:dataTable>
                
            </apex:tab>
        </apex:tabPanel>
    </apex:form>
    <script>
    //This JS function takes in the ID of the doctor who's name the user is mousing over, and puts it in the hidden input
    function passID(value){
        console.log(value);
        document.getElementById('j_id0:form1:docid').value=value;
        
    }
    
    
    
    
    //get user's current longitude and lattitude and store them in inputHiddens
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else { 
            //x.innerHTML = "Geolocation is not supported by this browser.";
        }
    }
    
    function showPosition(position) {
        let lat = document.getElementById("j_id0:form1:lat");
        let lon = document.getElementById("j_id0:form1:lon");
        lat.value = position.coords.latitude;
        lon.value = position.coords.longitude;
        
    }
    </script>
</apex:page>